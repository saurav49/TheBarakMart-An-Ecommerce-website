{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\HP\\\\Documents\\\\GitHub\\\\TheBarakMart-An-Ecommerce-website\\\\src\\\\components\\\\productList\\\\AddToCartButton.js\";\n\nimport React from \"react\";\nimport { FaArrowRight, FaShoppingBag } from \"../../icons/icon\";\nimport styles from \"./ProductCard.module.css\";\nimport { useDataContext } from \"../../hook/index\";\nimport { Toast } from \"../toast/Toast\";\nimport { useNavigate } from \"react-router-dom\";\n\nvar AddToCartButton = function AddToCartButton(_ref) {\n  var productId = _ref.productId,\n      inStock = _ref.inStock;\n\n  var _useDataContext = useDataContext(),\n      state = _useDataContext.state,\n      addProductToDb = _useDataContext.addProductToDb,\n      updateCartQuantity = _useDataContext.updateCartQuantity,\n      isLoading = _useDataContext.isLoading; // To check whether item is in cartList\n\n\n  var checkIsInCartList = function checkIsInCartList(cartList, productId) {\n    return cartList.find(function (product) {\n      return product._id === productId;\n    }) !== undefined;\n  }; // Extract product from the product list\n\n\n  var productToBeAdded = state.productList.filter(function (product) {\n    return product._id === productId;\n  })[0];\n  var navigate = useNavigate();\n\n  var handleAddToCart = function handleAddToCart() {\n    productToBeAdded.isInCartList ? navigate(\"/cart\") : checkIsInCartList(state.cartList, productId) ? updateCartQuantity({\n      url: \"/api/cartLists\",\n      listType: \"cartList\",\n      dispatchType: \"UPDATE_PRODUCT_QUANTITY_IN_CART\",\n      productId: productId,\n      updateType: \"INCREMENT\",\n      toastMsg: \"\".concat(productToBeAdded.name, \" HAS BEEN UPDATED\"),\n      toastType: \"info\"\n    }) : addProductToDb({\n      url: \"/api/cartLists\",\n      listType: \"cartList\",\n      dispatchType: \"ADD_PRODUCT_TO_CART\",\n      productId: productId,\n      toastMsg: \"\".concat(productToBeAdded.name, \" HAS BEEN ADDED TO CART\"),\n      toastType: \"success\"\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, inStock ? /*#__PURE__*/React.createElement(\"button\", {\n    className: styles.btn,\n    onClick: handleAddToCart,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, productToBeAdded.isInCartList ? /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 15\n    }\n  }, \"GO TO CART\"), /*#__PURE__*/React.createElement(FaArrowRight, {\n    className: styles.arrowIcon,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 15\n    }\n  })) : /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FaShoppingBag, {\n    className: styles.bagIcon,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 15\n    }\n  }, \"ADD TO CART\"))) : null, isLoading && /*#__PURE__*/React.createElement(Toast, {\n    message: state.toast.toastMsg,\n    type: state.toast.toastType,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport { AddToCartButton };","map":{"version":3,"sources":["C:/Users/HP/Documents/GitHub/TheBarakMart-An-Ecommerce-website/src/components/productList/AddToCartButton.js"],"names":["React","FaArrowRight","FaShoppingBag","styles","useDataContext","Toast","useNavigate","AddToCartButton","productId","inStock","state","addProductToDb","updateCartQuantity","isLoading","checkIsInCartList","cartList","find","product","_id","undefined","productToBeAdded","productList","filter","navigate","handleAddToCart","isInCartList","url","listType","dispatchType","updateType","toastMsg","name","toastType","btn","arrowIcon","bagIcon","toast"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { FaArrowRight, FaShoppingBag } from \"../../icons/icon\";\r\nimport styles from \"./ProductCard.module.css\";\r\nimport { useDataContext } from \"../../hook/index\";\r\nimport { Toast } from \"../toast/Toast\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst AddToCartButton = ({ productId, inStock }) => {\r\n  const { state, addProductToDb, updateCartQuantity, isLoading } =\r\n    useDataContext();\r\n\r\n  // To check whether item is in cartList\r\n  const checkIsInCartList = (cartList, productId) => {\r\n    return cartList.find((product) => product._id === productId) !== undefined;\r\n  };\r\n\r\n  // Extract product from the product list\r\n  const productToBeAdded = state.productList.filter(\r\n    (product) => product._id === productId\r\n  )[0];\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const handleAddToCart = () => {\r\n    productToBeAdded.isInCartList\r\n      ? navigate(\"/cart\")\r\n      : checkIsInCartList(state.cartList, productId)\r\n      ? updateCartQuantity({\r\n          url: `/api/cartLists`,\r\n          listType: \"cartList\",\r\n          dispatchType: \"UPDATE_PRODUCT_QUANTITY_IN_CART\",\r\n          productId: productId,\r\n          updateType: \"INCREMENT\",\r\n          toastMsg: `${productToBeAdded.name} HAS BEEN UPDATED`,\r\n          toastType: \"info\",\r\n        })\r\n      : addProductToDb({\r\n          url: `/api/cartLists`,\r\n          listType: \"cartList\",\r\n          dispatchType: \"ADD_PRODUCT_TO_CART\",\r\n          productId: productId,\r\n          toastMsg: `${productToBeAdded.name} HAS BEEN ADDED TO CART`,\r\n          toastType: \"success\",\r\n        });\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {inStock ? (\r\n        <button className={styles.btn} onClick={handleAddToCart}>\r\n          {productToBeAdded.isInCartList ? (\r\n            <React.Fragment>\r\n              <span>GO TO CART</span>\r\n              <FaArrowRight className={styles.arrowIcon} />\r\n            </React.Fragment>\r\n          ) : (\r\n            <React.Fragment>\r\n              <FaShoppingBag className={styles.bagIcon} />\r\n              <span>ADD TO CART</span>\r\n            </React.Fragment>\r\n          )}\r\n        </button>\r\n      ) : null}\r\n      {isLoading && (\r\n        <Toast message={state.toast.toastMsg} type={state.toast.toastType} />\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport { AddToCartButton };\r\n"]},"metadata":{},"sourceType":"module"}