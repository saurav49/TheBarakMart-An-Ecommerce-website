{"ast":null,"code":"import { useEffect } from \"react\";\nimport { useDataContext } from \"./hook/index\";\nimport { PRODUCT_API, WISHLIST_API, CART_API } from \"./urls\";\nimport { useAuthContext } from \"./hook/useAuth\";\n\nvar Initialize = function Initialize() {\n  var _useDataContext = useDataContext(),\n      fetchProductAndAdd = _useDataContext.fetchProductAndAdd,\n      initializeCartList = _useDataContext.initializeCartList,\n      initiaizeWishlist = _useDataContext.initiaizeWishlist;\n\n  var _useAuthContext = useAuthContext(),\n      userId = _useAuthContext.userId;\n\n  useEffect(function () {\n    initiaizeWishlist({\n      url: \"\".concat(WISHLIST_API),\n      userId: userId\n    });\n    initializeCartList({\n      url: \"\".concat(CART_API),\n      userId: userId\n    });\n    fetchProductAndAdd({\n      url: \"\".concat(PRODUCT_API),\n      dispatchType: \"ADD_TO_PRODUCT\",\n      listType: \"products\"\n    }); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n};\n\nvar checkInputField = function checkInputField(inputValue) {\n  return inputValue === \"\" ? \"EMPTY\" : \"NOT_EMPTY\";\n};\n\nvar validateEmail = function validateEmail(email) {\n  var validEmailRegex = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n  return validEmailRegex.test(email);\n};\n\nvar validatePassword = function validatePassword(password) {\n  var validPasswordRegex = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{6,20}$/;\n  return validPasswordRegex.test(password);\n};\n\nvar validateUsername = function validateUsername(username) {\n  var validUsernameRegex = /^[a-zA-Z]/;\n  return validUsernameRegex.test(username);\n};\n\nvar isMatch = function isMatch(password, confirmPassword) {\n  return password === confirmPassword ? true : false;\n};\n\nexport { Initialize, checkInputField, validateEmail, validatePassword, validateUsername, isMatch };","map":{"version":3,"sources":["C:/Users/HP/Documents/GitHub/TheBarakMart-An-Ecommerce-website/src/utils.js"],"names":["useEffect","useDataContext","PRODUCT_API","WISHLIST_API","CART_API","useAuthContext","Initialize","fetchProductAndAdd","initializeCartList","initiaizeWishlist","userId","url","dispatchType","listType","checkInputField","inputValue","validateEmail","email","validEmailRegex","test","validatePassword","password","validPasswordRegex","validateUsername","username","validUsernameRegex","isMatch","confirmPassword"],"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,cAAT,QAA+B,cAA/B;AACA,SAASC,WAAT,EAAsBC,YAAtB,EAAoCC,QAApC,QAAoD,QAApD;AACA,SAASC,cAAT,QAA+B,gBAA/B;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvB,wBACEL,cAAc,EADhB;AAAA,MAAQM,kBAAR,mBAAQA,kBAAR;AAAA,MAA4BC,kBAA5B,mBAA4BA,kBAA5B;AAAA,MAAgDC,iBAAhD,mBAAgDA,iBAAhD;;AAEA,wBAAmBJ,cAAc,EAAjC;AAAA,MAAQK,MAAR,mBAAQA,MAAR;;AAEAV,EAAAA,SAAS,CAAC,YAAM;AACdS,IAAAA,iBAAiB,CAAC;AAChBE,MAAAA,GAAG,YAAKR,YAAL,CADa;AAEhBO,MAAAA,MAAM,EAAEA;AAFQ,KAAD,CAAjB;AAKAF,IAAAA,kBAAkB,CAAC;AACjBG,MAAAA,GAAG,YAAKP,QAAL,CADc;AAEjBM,MAAAA,MAAM,EAAEA;AAFS,KAAD,CAAlB;AAKAH,IAAAA,kBAAkB,CAAC;AACjBI,MAAAA,GAAG,YAAKT,WAAL,CADc;AAEjBU,MAAAA,YAAY,EAAE,gBAFG;AAGjBC,MAAAA,QAAQ,EAAE;AAHO,KAAD,CAAlB,CAXc,CAgBd;AACD,GAjBQ,EAiBN,EAjBM,CAAT;AAkBD,CAvBD;;AAyBA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,UAAD,EAAgB;AACtC,SAAOA,UAAU,KAAK,EAAf,GAAoB,OAApB,GAA8B,WAArC;AACD,CAFD;;AAIA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAW;AAC/B,MAAMC,eAAe,GACnB,sEADF;AAGA,SAAOA,eAAe,CAACC,IAAhB,CAAqBF,KAArB,CAAP;AACD,CALD;;AAOA,IAAMG,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,QAAD,EAAc;AACrC,MAAMC,kBAAkB,GAAG,yCAA3B;AAEA,SAAOA,kBAAkB,CAACH,IAAnB,CAAwBE,QAAxB,CAAP;AACD,CAJD;;AAMA,IAAME,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,QAAD,EAAc;AACrC,MAAMC,kBAAkB,GAAG,WAA3B;AAEA,SAAOA,kBAAkB,CAACN,IAAnB,CAAwBK,QAAxB,CAAP;AACD,CAJD;;AAMA,IAAME,OAAO,GAAG,SAAVA,OAAU,CAACL,QAAD,EAAWM,eAAX,EAA+B;AAC7C,SAAON,QAAQ,KAAKM,eAAb,GAA+B,IAA/B,GAAsC,KAA7C;AACD,CAFD;;AAIA,SACErB,UADF,EAEEQ,eAFF,EAGEE,aAHF,EAIEI,gBAJF,EAKEG,gBALF,EAMEG,OANF","sourcesContent":["import { useEffect } from \"react\";\r\nimport { useDataContext } from \"./hook/index\";\r\nimport { PRODUCT_API, WISHLIST_API, CART_API } from \"./urls\";\r\nimport { useAuthContext } from \"./hook/useAuth\";\r\n\r\nconst Initialize = () => {\r\n  const { fetchProductAndAdd, initializeCartList, initiaizeWishlist } =\r\n    useDataContext();\r\n  const { userId } = useAuthContext();\r\n\r\n  useEffect(() => {\r\n    initiaizeWishlist({\r\n      url: `${WISHLIST_API}`,\r\n      userId: userId,\r\n    });\r\n\r\n    initializeCartList({\r\n      url: `${CART_API}`,\r\n      userId: userId,\r\n    });\r\n\r\n    fetchProductAndAdd({\r\n      url: `${PRODUCT_API}`,\r\n      dispatchType: \"ADD_TO_PRODUCT\",\r\n      listType: \"products\",\r\n    });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n};\r\n\r\nconst checkInputField = (inputValue) => {\r\n  return inputValue === \"\" ? \"EMPTY\" : \"NOT_EMPTY\";\r\n};\r\n\r\nconst validateEmail = (email) => {\r\n  const validEmailRegex =\r\n    /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\r\n\r\n  return validEmailRegex.test(email);\r\n};\r\n\r\nconst validatePassword = (password) => {\r\n  const validPasswordRegex = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{6,20}$/;\r\n\r\n  return validPasswordRegex.test(password);\r\n};\r\n\r\nconst validateUsername = (username) => {\r\n  const validUsernameRegex = /^[a-zA-Z]/;\r\n\r\n  return validUsernameRegex.test(username);\r\n};\r\n\r\nconst isMatch = (password, confirmPassword) => {\r\n  return password === confirmPassword ? true : false;\r\n};\r\n\r\nexport {\r\n  Initialize,\r\n  checkInputField,\r\n  validateEmail,\r\n  validatePassword,\r\n  validateUsername,\r\n  isMatch,\r\n};\r\n"]},"metadata":{},"sourceType":"module"}