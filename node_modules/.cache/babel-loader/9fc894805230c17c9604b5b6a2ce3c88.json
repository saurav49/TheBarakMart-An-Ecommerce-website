{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\HP\\\\Documents\\\\GitHub\\\\TheBarakMart-An-Ecommerce-website\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\HP\\\\Documents\\\\GitHub\\\\TheBarakMart-An-Ecommerce-website\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\Users\\\\HP\\\\Documents\\\\GitHub\\\\TheBarakMart-An-Ecommerce-website\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\HP\\\\Documents\\\\GitHub\\\\TheBarakMart-An-Ecommerce-website\\\\src\\\\context\\\\AuthContext.js\";\n\nimport React, { createContext, useState, useEffect } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport { useUserContext } from \"../hook/index\";\nimport { USER_API } from \"../urls\";\nimport axios from \"axios\";\nexport var AuthContext = createContext();\nexport var AuthProvider = function AuthProvider(_ref) {\n  var children = _ref.children;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLogin = _useState2[0],\n      setLogin = _useState2[1];\n\n  var navigate = useNavigate();\n\n  var _useLocation = useLocation(),\n      state = _useLocation.state;\n\n  var _useUserContext = useUserContext(),\n      users = _useUserContext.state.users;\n\n  useEffect(function () {\n    var _localStorage;\n\n    var loginStatus = JSON.parse((_localStorage = localStorage) === null || _localStorage === void 0 ? void 0 : _localStorage.getItem(\"login\"));\n    (loginStatus === null || loginStatus === void 0 ? void 0 : loginStatus.isUserLoggedIn) ? setLogin(true) : setLogin(false);\n  }, []);\n\n  var handleUserCredentials = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(userName, password) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              try {\n                // const response =\n                // if (response.success) {\n                //   setLogin(true);\n                //   const item = localStorage?.setItem(\n                //     \"login\",\n                //     JSON.stringify({ isUserLoggedIn: true })\n                //   );\n                //   navigate(state?.from ? state.from : \"/products\");\n                // }\n                console.log(\"i am in AUTHCONTEXT\");\n              } catch (error) {\n                alert(\"please enter correct username and password, check useAuthContext\");\n                console.log(error);\n              }\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleUserCredentials(_x, _x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/React.createElement(AuthContext.Provider, {\n    value: {\n      isLogin: isLogin,\n      handleUserCredentials: handleUserCredentials,\n      setLogin: setLogin\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, children);\n};","map":{"version":3,"sources":["C:/Users/HP/Documents/GitHub/TheBarakMart-An-Ecommerce-website/src/context/AuthContext.js"],"names":["React","createContext","useState","useEffect","useNavigate","useLocation","useUserContext","USER_API","axios","AuthContext","AuthProvider","children","isLogin","setLogin","navigate","state","users","loginStatus","JSON","parse","localStorage","getItem","isUserLoggedIn","handleUserCredentials","userName","password","console","log","error","alert"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,EAAyCC,SAAzC,QAA0D,OAA1D;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,kBAAzC;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,SAASC,QAAT,QAAyB,SAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,IAAMC,WAAW,GAAGR,aAAa,EAAjC;AAEP,OAAO,IAAMS,YAAY,GAAG,SAAfA,YAAe,OAAkB;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAC5C,kBAA4BT,QAAQ,CAAC,KAAD,CAApC;AAAA;AAAA,MAAOU,OAAP;AAAA,MAAgBC,QAAhB;;AAEA,MAAMC,QAAQ,GAAGV,WAAW,EAA5B;;AACA,qBAAkBC,WAAW,EAA7B;AAAA,MAAQU,KAAR,gBAAQA,KAAR;;AACA,wBAEIT,cAAc,EAFlB;AAAA,MACWU,KADX,mBACED,KADF,CACWC,KADX;;AAIAb,EAAAA,SAAS,CAAC,YAAM;AAAA;;AACd,QAAMc,WAAW,GAAGC,IAAI,CAACC,KAAL,kBAAWC,YAAX,kDAAW,cAAcC,OAAd,CAAsB,OAAtB,CAAX,CAApB;AAEA,KAAAJ,WAAW,SAAX,IAAAA,WAAW,WAAX,YAAAA,WAAW,CAAEK,cAAb,IAA8BT,QAAQ,CAAC,IAAD,CAAtC,GAA+CA,QAAQ,CAAC,KAAD,CAAvD;AACD,GAJQ,EAIN,EAJM,CAAT;;AAMA,MAAMU,qBAAqB;AAAA,yEAAG,iBAAOC,QAAP,EAAiBC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAC5B,kBAAI;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAC,gBAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACD,eAZD,CAYE,OAAOC,KAAP,EAAc;AACdC,gBAAAA,KAAK,CAAC,kEAAD,CAAL;AACAH,gBAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACD;;AAhB2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAArBL,qBAAqB;AAAA;AAAA;AAAA,KAA3B;;AAmBA,sBACE,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAEX,MAAAA,OAAO,EAAPA,OAAF;AAAWW,MAAAA,qBAAqB,EAArBA,qBAAX;AAAkCV,MAAAA,QAAQ,EAARA;AAAlC,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,QADH,CADF;AAKD,CAvCM","sourcesContent":["import React, { createContext, useState, useEffect } from \"react\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useUserContext } from \"../hook/index\";\r\nimport { USER_API } from \"../urls\";\r\nimport axios from \"axios\";\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [isLogin, setLogin] = useState(false);\r\n\r\n  const navigate = useNavigate();\r\n  const { state } = useLocation();\r\n  const {\r\n    state: { users },\r\n  } = useUserContext();\r\n\r\n  useEffect(() => {\r\n    const loginStatus = JSON.parse(localStorage?.getItem(\"login\"));\r\n\r\n    loginStatus?.isUserLoggedIn ? setLogin(true) : setLogin(false);\r\n  }, []);\r\n\r\n  const handleUserCredentials = async (userName, password) => {\r\n    try {\r\n      // const response =\r\n      // if (response.success) {\r\n      //   setLogin(true);\r\n      //   const item = localStorage?.setItem(\r\n      //     \"login\",\r\n      //     JSON.stringify({ isUserLoggedIn: true })\r\n      //   );\r\n      //   navigate(state?.from ? state.from : \"/products\");\r\n      // }\r\n\r\n      console.log(\"i am in AUTHCONTEXT\");\r\n    } catch (error) {\r\n      alert(\"please enter correct username and password, check useAuthContext\");\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ isLogin, handleUserCredentials, setLogin }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}