{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\HP\\\\Documents\\\\GitHub\\\\TheBarakMart-An-Ecommerce-website\\\\src\\\\components\\\\productList\\\\AddToCartButton.js\";\n\nimport React from \"react\";\nimport { FaArrowRight, FaShoppingBag } from \"../../icons/icon\";\nimport styles from \"./ProductCard.module.css\";\nimport { useDataContext } from \"../../hook/index\";\nimport { Toast } from \"../toast/Toast\";\nimport { useNavigate } from \"react-router-dom\";\nimport { CART_API, WISHLIST_API } from \"../../urls\";\n\nvar AddToCartButton = function AddToCartButton(_ref) {\n  var name = _ref.name,\n      productId = _ref.productId,\n      inStock = _ref.inStock,\n      isInCartList = _ref.isInCartList,\n      type = _ref.type;\n\n  var _useDataContext = useDataContext(),\n      state = _useDataContext.state,\n      addProductToCart = _useDataContext.addProductToCart,\n      updateCartQuantity = _useDataContext.updateCartQuantity,\n      isLoading = _useDataContext.isLoading,\n      removeProductFromWishlist = _useDataContext.removeProductFromWishlist; // To check whether item is in cartList\n\n\n  var checkIsInCartList = function checkIsInCartList(cartList, productId) {\n    return cartList.find(function (product) {\n      return product._id === productId;\n    }) !== undefined;\n  };\n\n  var navigate = useNavigate();\n\n  if (type === \"wishList\" && checkIsInCartList(state.cartList, productId)) {\n    addProductToCart({\n      url: \"\".concat(CART_API),\n      productId: productId,\n      toastMsg: \"\".concat(name, \" HAS BEEN ADDED TO CART\"),\n      toastType: \"success\"\n    });\n    console.log({\n      type: type\n    }, checkIsInCartList(state.cartList, productId));\n    removeProductFromWishlist({\n      url: WISHLIST_API,\n      productId: productId,\n      toastMsg: \"${name} product added to cart\",\n      toastType: \"success\"\n    });\n  }\n\n  var handleAddToCart = function handleAddToCart() {\n    isInCartList ? navigate(\"/cart\") : checkIsInCartList(state.cartList, productId) ? updateCartQuantity({\n      url: \"\".concat(CART_API),\n      listType: \"cartList\",\n      dispatchType: \"UPDATE_PRODUCT_QUANTITY_IN_CART\",\n      productId: productId,\n      updateType: \"INCREMENT\",\n      toastMsg: \"\".concat(name, \" HAS BEEN UPDATED\"),\n      toastType: \"info\"\n    }) : addProductToCart({\n      url: \"\".concat(CART_API),\n      productId: productId,\n      toastMsg: \"\".concat(name, \" HAS BEEN ADDED TO CART\"),\n      toastType: \"success\"\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, inStock ? /*#__PURE__*/React.createElement(\"button\", {\n    className: styles.btn,\n    onClick: handleAddToCart,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, isInCartList ? /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 15\n    }\n  }, \"GO TO CART\"), /*#__PURE__*/React.createElement(FaArrowRight, {\n    className: styles.arrowIcon,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 15\n    }\n  })) : /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FaShoppingBag, {\n    className: styles.bagIcon,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 15\n    }\n  }, \"ADD TO CART\"))) : null, isLoading && /*#__PURE__*/React.createElement(Toast, {\n    message: state.toast.toastMsg,\n    type: state.toast.toastType,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport { AddToCartButton };","map":{"version":3,"sources":["C:/Users/HP/Documents/GitHub/TheBarakMart-An-Ecommerce-website/src/components/productList/AddToCartButton.js"],"names":["React","FaArrowRight","FaShoppingBag","styles","useDataContext","Toast","useNavigate","CART_API","WISHLIST_API","AddToCartButton","name","productId","inStock","isInCartList","type","state","addProductToCart","updateCartQuantity","isLoading","removeProductFromWishlist","checkIsInCartList","cartList","find","product","_id","undefined","navigate","url","toastMsg","toastType","console","log","handleAddToCart","listType","dispatchType","updateType","btn","arrowIcon","bagIcon","toast"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { FaArrowRight, FaShoppingBag } from \"../../icons/icon\";\r\nimport styles from \"./ProductCard.module.css\";\r\nimport { useDataContext } from \"../../hook/index\";\r\nimport { Toast } from \"../toast/Toast\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { CART_API, WISHLIST_API } from \"../../urls\";\r\n\r\nconst AddToCartButton = ({ name, productId, inStock, isInCartList, type }) => {\r\n  const {\r\n    state,\r\n    addProductToCart,\r\n    updateCartQuantity,\r\n    isLoading,\r\n    removeProductFromWishlist,\r\n  } = useDataContext();\r\n\r\n  // To check whether item is in cartList\r\n  const checkIsInCartList = (cartList, productId) => {\r\n    return cartList.find((product) => product._id === productId) !== undefined;\r\n  };\r\n\r\n  const navigate = useNavigate();\r\n\r\n  if (type === \"wishList\" && checkIsInCartList(state.cartList, productId)) {\r\n    addProductToCart({\r\n      url: `${CART_API}`,\r\n      productId: productId,\r\n      toastMsg: `${name} HAS BEEN ADDED TO CART`,\r\n      toastType: \"success\",\r\n    });\r\n\r\n    console.log({ type }, checkIsInCartList(state.cartList, productId));\r\n\r\n    removeProductFromWishlist({\r\n      url: WISHLIST_API,\r\n      productId: productId,\r\n      toastMsg: \"${name} product added to cart\",\r\n      toastType: \"success\",\r\n    });\r\n  }\r\n\r\n  const handleAddToCart = () => {\r\n    isInCartList\r\n      ? navigate(\"/cart\")\r\n      : checkIsInCartList(state.cartList, productId)\r\n      ? updateCartQuantity({\r\n          url: `${CART_API}`,\r\n          listType: \"cartList\",\r\n          dispatchType: \"UPDATE_PRODUCT_QUANTITY_IN_CART\",\r\n          productId: productId,\r\n          updateType: \"INCREMENT\",\r\n          toastMsg: `${name} HAS BEEN UPDATED`,\r\n          toastType: \"info\",\r\n        })\r\n      : addProductToCart({\r\n          url: `${CART_API}`,\r\n          productId: productId,\r\n          toastMsg: `${name} HAS BEEN ADDED TO CART`,\r\n          toastType: \"success\",\r\n        });\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {inStock ? (\r\n        <button className={styles.btn} onClick={handleAddToCart}>\r\n          {isInCartList ? (\r\n            <React.Fragment>\r\n              <span>GO TO CART</span>\r\n              <FaArrowRight className={styles.arrowIcon} />\r\n            </React.Fragment>\r\n          ) : (\r\n            <React.Fragment>\r\n              <FaShoppingBag className={styles.bagIcon} />\r\n              <span>ADD TO CART</span>\r\n            </React.Fragment>\r\n          )}\r\n        </button>\r\n      ) : null}\r\n      {isLoading && (\r\n        <Toast message={state.toast.toastMsg} type={state.toast.toastType} />\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport { AddToCartButton };\r\n"]},"metadata":{},"sourceType":"module"}