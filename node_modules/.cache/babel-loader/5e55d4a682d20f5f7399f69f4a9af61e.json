{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\HP\\\\Documents\\\\GitHub\\\\TheBarakMart-An-Ecommerce-website\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"C:\\\\Users\\\\HP\\\\Documents\\\\GitHub\\\\TheBarakMart-An-Ecommerce-website\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nexport var reducerFunc = function reducerFunc(state, action) {\n  switch (action.type) {\n    case \"ADD_TO_CART\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        cartList: action.payload\n      });\n\n    case \"ADD_TO_WISHLIST\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        wishList: action.payload\n      });\n\n    case \"ADD_TO_PRODUCT\":\n      var updateProductStatus = function updateProductStatus(products) {\n        return updateProductsWithWishListAndCartStatus(products, state.wishList, state.cartList);\n      };\n\n      return _objectSpread(_objectSpread({}, state), {}, {\n        productList: updateProductStatus(action.payload)\n      });\n\n    case \"ADD_PRODUCT_TO_WISHLIST\":\n      console.log(\"ADD_PRODUCT_TO_WISHLIST\", action, [].concat(_toConsumableArray(state.wishList), [_objectSpread({}, action.payload)]));\n      return _objectSpread(_objectSpread({}, state), {}, {\n        productList: state.productList.map(function (product) {\n          return product._id === action.productId ? _objectSpread(_objectSpread({}, product), {}, {\n            isInWishList: true\n          }) : _objectSpread({}, product);\n        }),\n        wishList: [].concat(_toConsumableArray(state.wishList), _toConsumableArray(action.payload)) // wishList: [\n        //   ...state.wishList,\n        //   {\n        //     ...action.payload,\n        //     wishListItems: state.wishList.wishListItems.map((product) => ({\n        //       ...product,\n        //       isInWishList: true,\n        //     })),\n        //   },\n        // ],\n\n      });\n\n    case \"REMOVE_PRODUCT_FROM_WISHLIST\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        productList: state.productList.map(function (product) {\n          return product._id === action.productId ? _objectSpread(_objectSpread({}, product), {}, {\n            isInWishList: false\n          }) : _objectSpread({}, product);\n        }),\n        wishList: state.wishList.wishListItems.filter(function (item) {\n          return item._id !== action.productId;\n        })\n      });\n\n    case \"ADD_PRODUCT_TO_CART\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        cartList: [].concat(_toConsumableArray(state.cartList), [_objectSpread(_objectSpread({}, action.payload), {}, {\n          isInCartList: true\n        })]),\n        productList: state.productList.map(function (product) {\n          return product._id === action.productId ? _objectSpread(_objectSpread({}, product), {}, {\n            isInCartList: true\n          }) : _objectSpread({}, product);\n        })\n      });\n\n    case \"REMOVE_PRODUCT_FROM_CART\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        productList: state.productList.map(function (product) {\n          return product._id === action.productId ? _objectSpread(_objectSpread({}, product), {}, {\n            isInCartList: false\n          }) : _objectSpread({}, product);\n        }),\n        cartList: state.cartList.filter(function (product) {\n          return product._id !== action.productId;\n        })\n      });\n\n    case \"UPDATE_PRODUCT_QUANTITY_IN_CART\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        cartList: state.cartList.map(function (product) {\n          return product._id === action.productId ? _objectSpread(_objectSpread({}, product), {}, {\n            quantity: action.payload,\n            price: updatePrice(state.productList, state.cartList, action.productId, action.updateType, action.payload)\n          }) : _objectSpread({}, product);\n        })\n      });\n\n    case \"DISPLAY_COMPONENT\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        displayComponent: action.payload\n      });\n\n    case \"SORT\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        filterStates: _objectSpread(_objectSpread({}, state.filterStates), {}, {\n          sortBy: action.payload\n        })\n      });\n\n    case \"TOGGLE_AVAILABILITY\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        filterStates: _objectSpread(_objectSpread({}, state.filterStates), {}, {\n          includeOutOfStock: !state.filterStates.includeOutOfStock\n        })\n      });\n\n    case \"TOGGLE_DELIVERY\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        filterStates: _objectSpread(_objectSpread({}, state.filterStates), {}, {\n          includeFastDelivery: !state.filterStates.includeFastDelivery\n        })\n      });\n\n    case \"CLEAR_FILTERS\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        filterStates: {\n          sortBy: null,\n          includeFastDelivery: false,\n          includeOutOfStock: false\n        }\n      });\n\n    default:\n      console.log(\"something went wrong\");\n      return state;\n  }\n};\n\nvar handleCheckingStatus = function handleCheckingStatus(list, product) {\n  if (list) {\n    return list.find(function (item) {\n      return item._id === product._id;\n    }) !== undefined;\n  }\n};\n\nexport var updateProductsWithWishListAndCartStatus = function updateProductsWithWishListAndCartStatus(productList, wishList, cartList) {\n  if (wishList) {\n    productList = productList.map(function (product) {\n      if (handleCheckingStatus(wishList.wishListItems, product)) {\n        return _objectSpread(_objectSpread({}, product), {}, {\n          isInWishList: true\n        });\n      } else {\n        return _objectSpread(_objectSpread({}, product), {}, {\n          isInWishList: false\n        });\n      }\n    });\n  }\n\n  if (cartList) {\n    productList = productList.map(function (product) {\n      if (handleCheckingStatus(cartList.cartItems, product)) {\n        return _objectSpread(_objectSpread({}, product), {}, {\n          isInCartList: true\n        });\n      } else {\n        return _objectSpread(_objectSpread({}, product), {}, {\n          isInCartList: false\n        });\n      }\n    });\n  }\n\n  return productList;\n}; // const addWishlistItemStatus = (wishList) => {\n//   return wishList.map((product) => {\n//     return { ...product, isInCartList: false };\n//   });\n// };\n// const updateCartPageProductWithPrice = (cartList) => {\n//   return cartList.map((product) => {\n//     return {\n//       ...product,\n//       price: product.price * product.quantity,\n//     };\n//   });\n// };\n\nvar updatePrice = function updatePrice(productList, cartList, productId, updateType) {\n  return updateType === \"INCREMENT\" ? parseFloat(cartList.filter(function (product) {\n    return product._id === productId;\n  })[0].price) + parseFloat(productList.filter(function (product) {\n    return product._id === productId;\n  })[0].price) : (parseFloat(cartList.filter(function (product) {\n    return product._id === productId;\n  })[0].price) - parseFloat(productList.filter(function (product) {\n    return product._id === productId;\n  })[0].price)).toFixed(2);\n}; // const removeDuplicateProductFromCart = (cartList, productToBeAdded) => {\n//   const { productId } = productToBeAdded;\n//   let newCartList = [\n//     ...cartList,\n//     { ...productToBeAdded, quantity: 1, isInCartList: true },\n//   ];\n//   console.log(\"HELLO_DING_DONG\", { newCartList });\n//   if (newCartList.length > 0) {\n//     newCartList = cartList.map((product) => {\n//       if (productId === product[\"productId\"]) {\n//         return {\n//           ...product,\n//           quantity: product[\"quantity\"] + 1,\n//           isInCartList: true,\n//         };\n//       } else {\n//         return {\n//           ...product,\n//         };\n//       }\n//     });\n//   }\n//   console.log(\"new_CART_LIST\", newCartList);\n//   return newCartList;\n// };\n// if (cartList.length === 0) {\n//   newCartList.push({ ...productToBeAdded, quantity: 1, isInCartList: true });\n//   console.log(\"ie_IFnsid\", { newCartList });\n// } else {\n//   cartList.forEach((product) => {\n//     if (productId === product[\"productId\"]) {\n//       console.log(\"inside_IF\", { product }, { newCartList });\n//       newCartList.push({\n//         ...product,\n//         qunatity: product[\"product\"] + 1,\n//         isInCartList: true\n//       });\n//     } else {\n//       console.log(\"inside_ELSE\", { product }, { newCartList });\n//       newCartList.push({\n//         ...productToBeAdded,\n//         quantity: 1,\n//         isInCartList: true\n//       });\n//     }\n//   });\n// }\n// console.log(\"NEW_CART_LIST\", { newCartList });\n// return newCartList;","map":{"version":3,"sources":["C:/Users/HP/Documents/GitHub/TheBarakMart-An-Ecommerce-website/src/context/reducerFunc.js"],"names":["reducerFunc","state","action","type","cartList","payload","wishList","updateProductStatus","products","updateProductsWithWishListAndCartStatus","productList","console","log","map","product","_id","productId","isInWishList","wishListItems","filter","item","isInCartList","quantity","price","updatePrice","updateType","displayComponent","filterStates","sortBy","includeOutOfStock","includeFastDelivery","handleCheckingStatus","list","find","undefined","cartItems","parseFloat","toFixed"],"mappings":"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","sourcesContent":["export const reducerFunc = (state, action) => {\r\n  switch (action.type) {\r\n    case \"ADD_TO_CART\":\r\n      return {\r\n        ...state,\r\n        cartList: action.payload,\r\n      };\r\n\r\n    case \"ADD_TO_WISHLIST\":\r\n      return { ...state, wishList: action.payload };\r\n\r\n    case \"ADD_TO_PRODUCT\":\r\n      const updateProductStatus = (products) => {\r\n        return updateProductsWithWishListAndCartStatus(\r\n          products,\r\n          state.wishList,\r\n          state.cartList\r\n        );\r\n      };\r\n\r\n      return { ...state, productList: updateProductStatus(action.payload) };\r\n\r\n    case \"ADD_PRODUCT_TO_WISHLIST\":\r\n      console.log(\"ADD_PRODUCT_TO_WISHLIST\", action, [\r\n        ...state.wishList,\r\n        { ...action.payload },\r\n      ]);\r\n      return {\r\n        ...state,\r\n        productList: state.productList.map((product) =>\r\n          product._id === action.productId\r\n            ? { ...product, isInWishList: true }\r\n            : { ...product }\r\n        ),\r\n\r\n        wishList: [...state.wishList, ...action.payload],\r\n        // wishList: [\r\n        //   ...state.wishList,\r\n        //   {\r\n        //     ...action.payload,\r\n        //     wishListItems: state.wishList.wishListItems.map((product) => ({\r\n        //       ...product,\r\n        //       isInWishList: true,\r\n        //     })),\r\n        //   },\r\n        // ],\r\n      };\r\n\r\n    case \"REMOVE_PRODUCT_FROM_WISHLIST\":\r\n      return {\r\n        ...state,\r\n        productList: state.productList.map((product) =>\r\n          product._id === action.productId\r\n            ? { ...product, isInWishList: false }\r\n            : { ...product }\r\n        ),\r\n        wishList: state.wishList.wishListItems.filter(\r\n          (item) => item._id !== action.productId\r\n        ),\r\n      };\r\n\r\n    case \"ADD_PRODUCT_TO_CART\":\r\n      return {\r\n        ...state,\r\n        cartList: [\r\n          ...state.cartList,\r\n          { ...action.payload, isInCartList: true },\r\n        ],\r\n        productList: state.productList.map((product) =>\r\n          product._id === action.productId\r\n            ? { ...product, isInCartList: true }\r\n            : { ...product }\r\n        ),\r\n      };\r\n\r\n    case \"REMOVE_PRODUCT_FROM_CART\":\r\n      return {\r\n        ...state,\r\n        productList: state.productList.map((product) =>\r\n          product._id === action.productId\r\n            ? { ...product, isInCartList: false }\r\n            : { ...product }\r\n        ),\r\n        cartList: state.cartList.filter(\r\n          (product) => product._id !== action.productId\r\n        ),\r\n      };\r\n\r\n    case \"UPDATE_PRODUCT_QUANTITY_IN_CART\":\r\n      return {\r\n        ...state,\r\n        cartList: state.cartList.map((product) =>\r\n          product._id === action.productId\r\n            ? {\r\n                ...product,\r\n                quantity: action.payload,\r\n                price: updatePrice(\r\n                  state.productList,\r\n                  state.cartList,\r\n                  action.productId,\r\n                  action.updateType,\r\n                  action.payload\r\n                ),\r\n              }\r\n            : { ...product }\r\n        ),\r\n      };\r\n\r\n    case \"DISPLAY_COMPONENT\":\r\n      return { ...state, displayComponent: action.payload };\r\n\r\n    case \"SORT\":\r\n      return {\r\n        ...state,\r\n        filterStates: { ...state.filterStates, sortBy: action.payload },\r\n      };\r\n\r\n    case \"TOGGLE_AVAILABILITY\":\r\n      return {\r\n        ...state,\r\n        filterStates: {\r\n          ...state.filterStates,\r\n          includeOutOfStock: !state.filterStates.includeOutOfStock,\r\n        },\r\n      };\r\n\r\n    case \"TOGGLE_DELIVERY\":\r\n      return {\r\n        ...state,\r\n        filterStates: {\r\n          ...state.filterStates,\r\n          includeFastDelivery: !state.filterStates.includeFastDelivery,\r\n        },\r\n      };\r\n\r\n    case \"CLEAR_FILTERS\":\r\n      return {\r\n        ...state,\r\n        filterStates: {\r\n          sortBy: null,\r\n          includeFastDelivery: false,\r\n          includeOutOfStock: false,\r\n        },\r\n      };\r\n\r\n    default:\r\n      console.log(\"something went wrong\");\r\n      return state;\r\n  }\r\n};\r\n\r\nconst handleCheckingStatus = (list, product) => {\r\n  if (list) {\r\n    return list.find((item) => item._id === product._id) !== undefined;\r\n  }\r\n};\r\n\r\nexport const updateProductsWithWishListAndCartStatus = (\r\n  productList,\r\n  wishList,\r\n  cartList\r\n) => {\r\n  if (wishList) {\r\n    productList = productList.map((product) => {\r\n      if (handleCheckingStatus(wishList.wishListItems, product)) {\r\n        return { ...product, isInWishList: true };\r\n      } else {\r\n        return { ...product, isInWishList: false };\r\n      }\r\n    });\r\n  }\r\n\r\n  if (cartList) {\r\n    productList = productList.map((product) => {\r\n      if (handleCheckingStatus(cartList.cartItems, product)) {\r\n        return { ...product, isInCartList: true };\r\n      } else {\r\n        return { ...product, isInCartList: false };\r\n      }\r\n    });\r\n  }\r\n\r\n  return productList;\r\n};\r\n\r\n// const addWishlistItemStatus = (wishList) => {\r\n//   return wishList.map((product) => {\r\n//     return { ...product, isInCartList: false };\r\n//   });\r\n// };\r\n\r\n// const updateCartPageProductWithPrice = (cartList) => {\r\n//   return cartList.map((product) => {\r\n//     return {\r\n//       ...product,\r\n//       price: product.price * product.quantity,\r\n//     };\r\n//   });\r\n// };\r\n\r\nconst updatePrice = (productList, cartList, productId, updateType) => {\r\n  return updateType === \"INCREMENT\"\r\n    ? parseFloat(\r\n        cartList.filter((product) => product._id === productId)[0].price\r\n      ) +\r\n        parseFloat(\r\n          productList.filter((product) => product._id === productId)[0].price\r\n        )\r\n    : (\r\n        parseFloat(\r\n          cartList.filter((product) => product._id === productId)[0].price\r\n        ) -\r\n        parseFloat(\r\n          productList.filter((product) => product._id === productId)[0].price\r\n        )\r\n      ).toFixed(2);\r\n};\r\n\r\n// const removeDuplicateProductFromCart = (cartList, productToBeAdded) => {\r\n//   const { productId } = productToBeAdded;\r\n\r\n//   let newCartList = [\r\n//     ...cartList,\r\n//     { ...productToBeAdded, quantity: 1, isInCartList: true },\r\n//   ];\r\n\r\n//   console.log(\"HELLO_DING_DONG\", { newCartList });\r\n\r\n//   if (newCartList.length > 0) {\r\n//     newCartList = cartList.map((product) => {\r\n//       if (productId === product[\"productId\"]) {\r\n//         return {\r\n//           ...product,\r\n//           quantity: product[\"quantity\"] + 1,\r\n//           isInCartList: true,\r\n//         };\r\n//       } else {\r\n//         return {\r\n//           ...product,\r\n//         };\r\n//       }\r\n//     });\r\n//   }\r\n\r\n//   console.log(\"new_CART_LIST\", newCartList);\r\n//   return newCartList;\r\n// };\r\n\r\n// if (cartList.length === 0) {\r\n//   newCartList.push({ ...productToBeAdded, quantity: 1, isInCartList: true });\r\n\r\n//   console.log(\"ie_IFnsid\", { newCartList });\r\n// } else {\r\n//   cartList.forEach((product) => {\r\n//     if (productId === product[\"productId\"]) {\r\n//       console.log(\"inside_IF\", { product }, { newCartList });\r\n\r\n//       newCartList.push({\r\n//         ...product,\r\n//         qunatity: product[\"product\"] + 1,\r\n//         isInCartList: true\r\n//       });\r\n//     } else {\r\n//       console.log(\"inside_ELSE\", { product }, { newCartList });\r\n\r\n//       newCartList.push({\r\n//         ...productToBeAdded,\r\n//         quantity: 1,\r\n//         isInCartList: true\r\n//       });\r\n//     }\r\n//   });\r\n// }\r\n\r\n// console.log(\"NEW_CART_LIST\", { newCartList });\r\n// return newCartList;\r\n"]},"metadata":{},"sourceType":"module"}