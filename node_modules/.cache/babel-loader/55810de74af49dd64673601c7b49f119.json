{"ast":null,"code":"/**\n *\n * @namespace faker.name\n */\nfunction Name(faker) {\n  /**\n   * firstName\n   *\n   * @method firstName\n   * @param {mixed} gender\n   * @memberof faker.name\n   */\n  this.firstName = function (gender) {\n    if (typeof faker.definitions.name.male_first_name !== \"undefined\" && typeof faker.definitions.name.female_first_name !== \"undefined\") {\n      // some locale datasets ( like ru ) have first_name split by gender. since the name.first_name field does not exist in these datasets,\n      // we must randomly pick a name from either gender array so faker.name.firstName will return the correct locale data ( and not fallback )\n      if (typeof gender === 'string') {\n        if (gender.toLowerCase() === 'male') {\n          gender = 0;\n        } else if (gender.toLowerCase() === 'female') {\n          gender = 1;\n        }\n      }\n\n      if (typeof gender !== 'number') {\n        if (typeof faker.definitions.name.first_name === \"undefined\") {\n          gender = faker.random.number(1);\n        } else {\n          //Fall back to non-gendered names if they exist and gender wasn't specified\n          return faker.random.arrayElement(faker.definitions.name.first_name);\n        }\n      }\n\n      if (gender === 0) {\n        return faker.random.arrayElement(faker.definitions.name.male_first_name);\n      } else {\n        return faker.random.arrayElement(faker.definitions.name.female_first_name);\n      }\n    }\n\n    return faker.random.arrayElement(faker.definitions.name.first_name);\n  };\n  /**\n   * lastName\n   *\n   * @method lastName\n   * @param {mixed} gender\n   * @memberof faker.name\n   */\n\n\n  this.lastName = function (gender) {\n    if (typeof faker.definitions.name.male_last_name !== \"undefined\" && typeof faker.definitions.name.female_last_name !== \"undefined\") {\n      // some locale datasets ( like ru ) have last_name split by gender. i have no idea how last names can have genders, but also i do not speak russian\n      // see above comment of firstName method\n      if (typeof gender !== 'number') {\n        gender = faker.random.number(1);\n      }\n\n      if (gender === 0) {\n        return faker.random.arrayElement(faker.locales[faker.locale].name.male_last_name);\n      } else {\n        return faker.random.arrayElement(faker.locales[faker.locale].name.female_last_name);\n      }\n    }\n\n    return faker.random.arrayElement(faker.definitions.name.last_name);\n  };\n  /**\n  * middleName\n  *\n  * @method middleName\n  * @param {mixed} gender\n  * @memberof faker.name\n  */\n\n\n  this.middleName = function (gender) {\n    if (typeof faker.definitions.name.male_middle_name !== \"undefined\" && typeof faker.definitions.name.female_middle_name !== \"undefined\") {\n      if (typeof gender !== 'number') {\n        gender = faker.random.number(1);\n      }\n\n      if (gender === 0) {\n        return faker.random.arrayElement(faker.locales[faker.locale].name.male_middle_name);\n      } else {\n        return faker.random.arrayElement(faker.locales[faker.locale].name.female_middle_name);\n      }\n    }\n\n    return faker.random.arrayElement(faker.definitions.name.middle_name);\n  };\n  /**\n   * findName\n   *\n   * @method findName\n   * @param {string} firstName\n   * @param {string} lastName\n   * @param {mixed} gender\n   * @memberof faker.name\n   */\n\n\n  this.findName = function (firstName, lastName, gender) {\n    var r = faker.random.number(8);\n    var prefix, suffix; // in particular locales first and last names split by gender,\n    // thus we keep consistency by passing 0 as male and 1 as female\n\n    if (typeof gender !== 'number') {\n      gender = faker.random.number(1);\n    }\n\n    firstName = firstName || faker.name.firstName(gender);\n    lastName = lastName || faker.name.lastName(gender);\n\n    switch (r) {\n      case 0:\n        prefix = faker.name.prefix(gender);\n\n        if (prefix) {\n          return prefix + \" \" + firstName + \" \" + lastName;\n        }\n\n      case 1:\n        suffix = faker.name.suffix(gender);\n\n        if (suffix) {\n          return firstName + \" \" + lastName + \" \" + suffix;\n        }\n\n    }\n\n    return firstName + \" \" + lastName;\n  };\n  /**\n   * jobTitle\n   *\n   * @method jobTitle\n   * @memberof faker.name\n   */\n\n\n  this.jobTitle = function () {\n    return faker.name.jobDescriptor() + \" \" + faker.name.jobArea() + \" \" + faker.name.jobType();\n  };\n  /**\n   * gender\n   *\n   * @method gender\n   * @memberof faker.name\n   */\n\n\n  this.gender = function () {\n    return faker.random.arrayElement(faker.definitions.name.gender);\n  };\n  /**\n   * prefix\n   *\n   * @method prefix\n   * @param {mixed} gender\n   * @memberof faker.name\n   */\n\n\n  this.prefix = function (gender) {\n    if (typeof faker.definitions.name.male_prefix !== \"undefined\" && typeof faker.definitions.name.female_prefix !== \"undefined\") {\n      if (typeof gender !== 'number') {\n        gender = faker.random.number(1);\n      }\n\n      if (gender === 0) {\n        return faker.random.arrayElement(faker.locales[faker.locale].name.male_prefix);\n      } else {\n        return faker.random.arrayElement(faker.locales[faker.locale].name.female_prefix);\n      }\n    }\n\n    return faker.random.arrayElement(faker.definitions.name.prefix);\n  };\n  /**\n   * suffix\n   *\n   * @method suffix\n   * @memberof faker.name\n   */\n\n\n  this.suffix = function () {\n    return faker.random.arrayElement(faker.definitions.name.suffix);\n  };\n  /**\n   * title\n   *\n   * @method title\n   * @memberof faker.name\n   */\n\n\n  this.title = function () {\n    var descriptor = faker.random.arrayElement(faker.definitions.name.title.descriptor),\n        level = faker.random.arrayElement(faker.definitions.name.title.level),\n        job = faker.random.arrayElement(faker.definitions.name.title.job);\n    return descriptor + \" \" + level + \" \" + job;\n  };\n  /**\n   * jobDescriptor\n   *\n   * @method jobDescriptor\n   * @memberof faker.name\n   */\n\n\n  this.jobDescriptor = function () {\n    return faker.random.arrayElement(faker.definitions.name.title.descriptor);\n  };\n  /**\n   * jobArea\n   *\n   * @method jobArea\n   * @memberof faker.name\n   */\n\n\n  this.jobArea = function () {\n    return faker.random.arrayElement(faker.definitions.name.title.level);\n  };\n  /**\n   * jobType\n   *\n   * @method jobType\n   * @memberof faker.name\n   */\n\n\n  this.jobType = function () {\n    return faker.random.arrayElement(faker.definitions.name.title.job);\n  };\n}\n\nmodule['exports'] = Name;","map":{"version":3,"sources":["C:/Users/HP/Documents/GitHub/TheBarakMart-An-Ecommerce-website/node_modules/faker/lib/name.js"],"names":["Name","faker","firstName","gender","definitions","name","male_first_name","female_first_name","toLowerCase","first_name","random","number","arrayElement","lastName","male_last_name","female_last_name","locales","locale","last_name","middleName","male_middle_name","female_middle_name","middle_name","findName","r","prefix","suffix","jobTitle","jobDescriptor","jobArea","jobType","male_prefix","female_prefix","title","descriptor","level","job","module"],"mappings":"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","sourcesContent":["/**\n *\n * @namespace faker.name\n */\nfunction Name (faker) {\n\n  /**\n   * firstName\n   *\n   * @method firstName\n   * @param {mixed} gender\n   * @memberof faker.name\n   */\n  this.firstName = function (gender) {\n    if (typeof faker.definitions.name.male_first_name !== \"undefined\" && typeof faker.definitions.name.female_first_name !== \"undefined\") {\n      // some locale datasets ( like ru ) have first_name split by gender. since the name.first_name field does not exist in these datasets,\n      // we must randomly pick a name from either gender array so faker.name.firstName will return the correct locale data ( and not fallback )\n\n      if(typeof gender === 'string') {\n        if(gender.toLowerCase() === 'male') {\n          gender = 0;\n        }\n        else if(gender.toLowerCase() === 'female') {\n          gender = 1;\n        }\n      }\n\n      if (typeof gender !== 'number') {\n        if(typeof faker.definitions.name.first_name === \"undefined\") {\n          gender = faker.random.number(1);\n        }\n        else {\n          //Fall back to non-gendered names if they exist and gender wasn't specified\n          return faker.random.arrayElement(faker.definitions.name.first_name);\n        }\n      }\n      if (gender === 0) {\n        return faker.random.arrayElement(faker.definitions.name.male_first_name)\n      } else {\n        return faker.random.arrayElement(faker.definitions.name.female_first_name);\n      }\n    }\n    return faker.random.arrayElement(faker.definitions.name.first_name);\n  };\n\n  /**\n   * lastName\n   *\n   * @method lastName\n   * @param {mixed} gender\n   * @memberof faker.name\n   */\n  this.lastName = function (gender) {\n    if (typeof faker.definitions.name.male_last_name !== \"undefined\" && typeof faker.definitions.name.female_last_name !== \"undefined\") {\n      // some locale datasets ( like ru ) have last_name split by gender. i have no idea how last names can have genders, but also i do not speak russian\n      // see above comment of firstName method\n      if (typeof gender !== 'number') {\n        gender = faker.random.number(1);\n      }\n      if (gender === 0) {\n        return faker.random.arrayElement(faker.locales[faker.locale].name.male_last_name);\n      } else {\n        return faker.random.arrayElement(faker.locales[faker.locale].name.female_last_name);\n      }\n    }\n    return faker.random.arrayElement(faker.definitions.name.last_name);\n  };\n\n   /**\n   * middleName\n   *\n   * @method middleName\n   * @param {mixed} gender\n   * @memberof faker.name\n   */\n  this.middleName = function (gender) {\n    if (typeof faker.definitions.name.male_middle_name !== \"undefined\" && typeof faker.definitions.name.female_middle_name !== \"undefined\") {\n      if (typeof gender !== 'number') {\n        gender = faker.random.number(1);\n      }\n      if (gender === 0) {\n        return faker.random.arrayElement(faker.locales[faker.locale].name.male_middle_name);\n      } else {\n        return faker.random.arrayElement(faker.locales[faker.locale].name.female_middle_name);\n      }\n    }\n    return faker.random.arrayElement(faker.definitions.name.middle_name);\n  };\n\n  /**\n   * findName\n   *\n   * @method findName\n   * @param {string} firstName\n   * @param {string} lastName\n   * @param {mixed} gender\n   * @memberof faker.name\n   */\n  this.findName = function (firstName, lastName, gender) {\n      var r = faker.random.number(8);\n      var prefix, suffix;\n      // in particular locales first and last names split by gender,\n      // thus we keep consistency by passing 0 as male and 1 as female\n      if (typeof gender !== 'number') {\n        gender = faker.random.number(1);\n      }\n      firstName = firstName || faker.name.firstName(gender);\n      lastName = lastName || faker.name.lastName(gender);\n      switch (r) {\n      case 0:\n          prefix = faker.name.prefix(gender);\n          if (prefix) {\n              return prefix + \" \" + firstName + \" \" + lastName;\n          }\n      case 1:\n          suffix = faker.name.suffix(gender);\n          if (suffix) {\n              return firstName + \" \" + lastName + \" \" + suffix;\n          }\n      }\n\n      return firstName + \" \" + lastName;\n  };\n\n  /**\n   * jobTitle\n   *\n   * @method jobTitle\n   * @memberof faker.name\n   */\n  this.jobTitle = function () {\n    return  faker.name.jobDescriptor() + \" \" +\n      faker.name.jobArea() + \" \" +\n      faker.name.jobType();\n  };\n\n  /**\n   * gender\n   *\n   * @method gender\n   * @memberof faker.name\n   */\n  this.gender = function () {\n    return faker.random.arrayElement(faker.definitions.name.gender);\n  }\n  \n  /**\n   * prefix\n   *\n   * @method prefix\n   * @param {mixed} gender\n   * @memberof faker.name\n   */\n  this.prefix = function (gender) {\n    if (typeof faker.definitions.name.male_prefix !== \"undefined\" && typeof faker.definitions.name.female_prefix !== \"undefined\") {\n      if (typeof gender !== 'number') {\n        gender = faker.random.number(1);\n      }\n      if (gender === 0) {\n        return faker.random.arrayElement(faker.locales[faker.locale].name.male_prefix);\n      } else {\n        return faker.random.arrayElement(faker.locales[faker.locale].name.female_prefix);\n      }\n    }\n    return faker.random.arrayElement(faker.definitions.name.prefix);\n  };\n\n  /**\n   * suffix\n   *\n   * @method suffix\n   * @memberof faker.name\n   */\n  this.suffix = function () {\n      return faker.random.arrayElement(faker.definitions.name.suffix);\n  };\n\n  /**\n   * title\n   *\n   * @method title\n   * @memberof faker.name\n   */\n  this.title = function() {\n      var descriptor  = faker.random.arrayElement(faker.definitions.name.title.descriptor),\n          level       = faker.random.arrayElement(faker.definitions.name.title.level),\n          job         = faker.random.arrayElement(faker.definitions.name.title.job);\n\n      return descriptor + \" \" + level + \" \" + job;\n  };\n\n  /**\n   * jobDescriptor\n   *\n   * @method jobDescriptor\n   * @memberof faker.name\n   */\n  this.jobDescriptor = function () {\n    return faker.random.arrayElement(faker.definitions.name.title.descriptor);\n  };\n\n  /**\n   * jobArea\n   *\n   * @method jobArea\n   * @memberof faker.name\n   */\n  this.jobArea = function () {\n    return faker.random.arrayElement(faker.definitions.name.title.level);\n  };\n\n  /**\n   * jobType\n   *\n   * @method jobType\n   * @memberof faker.name\n   */\n  this.jobType = function () {\n    return faker.random.arrayElement(faker.definitions.name.title.job);\n  };\n\n}\n\nmodule['exports'] = Name;\n"]},"metadata":{},"sourceType":"script"}