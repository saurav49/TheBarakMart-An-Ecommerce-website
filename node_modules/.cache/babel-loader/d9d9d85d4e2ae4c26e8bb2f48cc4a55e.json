{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\HP\\\\Documents\\\\GitHub\\\\TheBarakMart-An-Ecommerce-website\\\\src\\\\pages\\\\PrivateRoute.js\";\n\nimport React from \"react\";\nimport { Route, Navigate, useLocation } from \"react-router\";\nimport { useAuthContext } from \"../hook/index\";\n\nvar PrivateRoute = function PrivateRoute(props) {\n  console.log(\"privateRoute\", props);\n\n  var _useAuthContext = useAuthContext(),\n      token = _useAuthContext.token;\n\n  var location = useLocation();\n\n  if (token) {\n    console.log(\"Hello IAM HERE \");\n    return /*#__PURE__*/React.createElement(Route, Object.assign({}, props, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 12\n      }\n    }));\n  } else {\n    console.log(\"NOOOOOO\");\n    return /*#__PURE__*/React.createElement(Navigate, {\n      to: \"/login\",\n      state: {\n        from: location.pathname\n      },\n      replace: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 12\n      }\n    });\n  } // return (\n  //   <React.Fragment>\n  //     {token ? (\n  //       <Route path={path} {...props} />\n  //     ) : (\n  //       <Navigate state={{ from: path }} replace to=\"/login\" />\n  //     )}\n  //   </React.Fragment>\n  // );\n\n};\n\nexport { PrivateRoute };","map":{"version":3,"sources":["C:/Users/HP/Documents/GitHub/TheBarakMart-An-Ecommerce-website/src/pages/PrivateRoute.js"],"names":["React","Route","Navigate","useLocation","useAuthContext","PrivateRoute","props","console","log","token","location","from","pathname"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,EAA0BC,WAA1B,QAA6C,cAA7C;AACA,SAASC,cAAT,QAA+B,eAA/B;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAW;AAC9BC,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BF,KAA5B;;AACA,wBAAkBF,cAAc,EAAhC;AAAA,MAAQK,KAAR,mBAAQA,KAAR;;AACA,MAAMC,QAAQ,GAAGP,WAAW,EAA5B;;AAEA,MAAIM,KAAJ,EAAW;AACTF,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACA,wBAAO,oBAAC,KAAD,oBAAWF,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;AACD,GAHD,MAGO;AACLC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACA,wBAAO,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,QAAb;AAAsB,MAAA,KAAK,EAAE;AAAEG,QAAAA,IAAI,EAAED,QAAQ,CAACE;AAAjB,OAA7B;AAA0D,MAAA,OAAO,MAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAX6B,CAa9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACD,CAtBD;;AAwBA,SAASP,YAAT","sourcesContent":["import React from \"react\";\r\nimport { Route, Navigate, useLocation } from \"react-router\";\r\nimport { useAuthContext } from \"../hook/index\";\r\n\r\nconst PrivateRoute = (props) => {\r\n  console.log(\"privateRoute\", props);\r\n  const { token } = useAuthContext();\r\n  const location = useLocation();\r\n\r\n  if (token) {\r\n    console.log(\"Hello IAM HERE \");\r\n    return <Route {...props} />;\r\n  } else {\r\n    console.log(\"NOOOOOO\");\r\n    return <Navigate to=\"/login\" state={{ from: location.pathname }} replace />;\r\n  }\r\n\r\n  // return (\r\n  //   <React.Fragment>\r\n  //     {token ? (\r\n  //       <Route path={path} {...props} />\r\n  //     ) : (\r\n  //       <Navigate state={{ from: path }} replace to=\"/login\" />\r\n  //     )}\r\n  //   </React.Fragment>\r\n  // );\r\n};\r\n\r\nexport { PrivateRoute };\r\n"]},"metadata":{},"sourceType":"module"}