{"ast":null,"code":"import { useEffect } from \"react\";\nimport { useDataContext } from \"./hook/index\";\nimport { useNavigate } from \"react-router-dom\";\nimport { PRODUCT_API, WISHLIST_API, CART_API } from \"./urls\";\n\nvar Initialize = function Initialize() {\n  var _useDataContext = useDataContext(),\n      fetchProductAndAdd = _useDataContext.fetchProductAndAdd;\n\n  var navigate = useNavigate();\n  useEffect(function () {\n    fetchProductAndAdd({\n      url: \"\".concat(PRODUCT_API),\n      dispatchType: \"ADD_TO_PRODUCT\",\n      listType: \"products\"\n    });\n  }, [fetchProductAndAdd]);\n  useEffect(function () {\n    fetchProductAndAdd({\n      url: \"\".concat(WISHLIST_API),\n      dispatchType: \"ADD_TO_WISHLIST\",\n      listType: \"wishList\"\n    });\n  }, [fetchProductAndAdd]);\n  useEffect(function () {\n    fetchProductAndAdd({\n      url: \"\".concat(CART_API),\n      dispatchType: \"ADD_TO_CART\",\n      listType: \"cartList\"\n    });\n  }, [fetchProductAndAdd]);\n};\n\nvar checkInputField = function checkInputField(inputValue) {\n  return inputValue === \"\" ? \"EMPTY\" : \"NOT_EMPTY\";\n};\n\nvar validateEmail = function validateEmail(email) {\n  var validEmailRegex = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n  return validEmailRegex.test(email);\n};\n\nvar validatePassword = function validatePassword(password) {\n  var validPasswordRegex = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{6,20}$/;\n  return validPasswordRegex.test(password);\n};\n\nvar validateUsername = function validateUsername(username) {\n  var validUsernameRegex = /^[a-zA-Z]/;\n  return validUsernameRegex.test(username);\n};\n\nvar isMatch = function isMatch(password, confirmPassword) {\n  return password === confirmPassword ? true : false;\n};\n\nexport { Initialize, checkInputField, validateEmail, validatePassword, validateUsername, isMatch };","map":{"version":3,"sources":["C:/Users/HP/Documents/GitHub/TheBarakMart-An-Ecommerce-website/src/utils.js"],"names":["useEffect","useDataContext","useNavigate","PRODUCT_API","WISHLIST_API","CART_API","Initialize","fetchProductAndAdd","navigate","url","dispatchType","listType","checkInputField","inputValue","validateEmail","email","validEmailRegex","test","validatePassword","password","validPasswordRegex","validateUsername","username","validUsernameRegex","isMatch","confirmPassword"],"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,cAAT,QAA+B,cAA/B;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,WAAT,EAAsBC,YAAtB,EAAoCC,QAApC,QAAoD,QAApD;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvB,wBAA+BL,cAAc,EAA7C;AAAA,MAAQM,kBAAR,mBAAQA,kBAAR;;AACA,MAAIC,QAAQ,GAAGN,WAAW,EAA1B;AAEAF,EAAAA,SAAS,CAAC,YAAM;AACdO,IAAAA,kBAAkB,CAAC;AACjBE,MAAAA,GAAG,YAAKN,WAAL,CADc;AAEjBO,MAAAA,YAAY,EAAE,gBAFG;AAGjBC,MAAAA,QAAQ,EAAE;AAHO,KAAD,CAAlB;AAKD,GANQ,EAMN,CAACJ,kBAAD,CANM,CAAT;AAQAP,EAAAA,SAAS,CAAC,YAAM;AACdO,IAAAA,kBAAkB,CAAC;AACjBE,MAAAA,GAAG,YAAKL,YAAL,CADc;AAEjBM,MAAAA,YAAY,EAAE,iBAFG;AAGjBC,MAAAA,QAAQ,EAAE;AAHO,KAAD,CAAlB;AAKD,GANQ,EAMN,CAACJ,kBAAD,CANM,CAAT;AAQAP,EAAAA,SAAS,CAAC,YAAM;AACdO,IAAAA,kBAAkB,CAAC;AACjBE,MAAAA,GAAG,YAAKJ,QAAL,CADc;AAEjBK,MAAAA,YAAY,EAAE,aAFG;AAGjBC,MAAAA,QAAQ,EAAE;AAHO,KAAD,CAAlB;AAKD,GANQ,EAMN,CAACJ,kBAAD,CANM,CAAT;AAOD,CA3BD;;AA6BA,IAAMK,eAAe,GAAG,SAAlBA,eAAkB,CAACC,UAAD,EAAgB;AACtC,SAAOA,UAAU,KAAK,EAAf,GAAoB,OAApB,GAA8B,WAArC;AACD,CAFD;;AAIA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAW;AAC/B,MAAMC,eAAe,GACnB,sEADF;AAGA,SAAOA,eAAe,CAACC,IAAhB,CAAqBF,KAArB,CAAP;AACD,CALD;;AAOA,IAAMG,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,QAAD,EAAc;AACrC,MAAMC,kBAAkB,GAAG,yCAA3B;AAEA,SAAOA,kBAAkB,CAACH,IAAnB,CAAwBE,QAAxB,CAAP;AACD,CAJD;;AAMA,IAAME,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,QAAD,EAAc;AACrC,MAAMC,kBAAkB,GAAG,WAA3B;AAEA,SAAOA,kBAAkB,CAACN,IAAnB,CAAwBK,QAAxB,CAAP;AACD,CAJD;;AAMA,IAAME,OAAO,GAAG,SAAVA,OAAU,CAACL,QAAD,EAAWM,eAAX,EAA+B;AAC7C,SAAON,QAAQ,KAAKM,eAAb,GAA+B,IAA/B,GAAsC,KAA7C;AACD,CAFD;;AAIA,SACEnB,UADF,EAEEM,eAFF,EAGEE,aAHF,EAIEI,gBAJF,EAKEG,gBALF,EAMEG,OANF","sourcesContent":["import { useEffect } from \"react\";\r\nimport { useDataContext } from \"./hook/index\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { PRODUCT_API, WISHLIST_API, CART_API } from \"./urls\";\r\n\r\nconst Initialize = () => {\r\n  const { fetchProductAndAdd } = useDataContext();\r\n  let navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    fetchProductAndAdd({\r\n      url: `${PRODUCT_API}`,\r\n      dispatchType: \"ADD_TO_PRODUCT\",\r\n      listType: \"products\",\r\n    });\r\n  }, [fetchProductAndAdd]);\r\n\r\n  useEffect(() => {\r\n    fetchProductAndAdd({\r\n      url: `${WISHLIST_API}`,\r\n      dispatchType: \"ADD_TO_WISHLIST\",\r\n      listType: \"wishList\",\r\n    });\r\n  }, [fetchProductAndAdd]);\r\n\r\n  useEffect(() => {\r\n    fetchProductAndAdd({\r\n      url: `${CART_API}`,\r\n      dispatchType: \"ADD_TO_CART\",\r\n      listType: \"cartList\",\r\n    });\r\n  }, [fetchProductAndAdd]);\r\n};\r\n\r\nconst checkInputField = (inputValue) => {\r\n  return inputValue === \"\" ? \"EMPTY\" : \"NOT_EMPTY\";\r\n};\r\n\r\nconst validateEmail = (email) => {\r\n  const validEmailRegex =\r\n    /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\r\n\r\n  return validEmailRegex.test(email);\r\n};\r\n\r\nconst validatePassword = (password) => {\r\n  const validPasswordRegex = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{6,20}$/;\r\n\r\n  return validPasswordRegex.test(password);\r\n};\r\n\r\nconst validateUsername = (username) => {\r\n  const validUsernameRegex = /^[a-zA-Z]/;\r\n\r\n  return validUsernameRegex.test(username);\r\n};\r\n\r\nconst isMatch = (password, confirmPassword) => {\r\n  return password === confirmPassword ? true : false;\r\n};\r\n\r\nexport {\r\n  Initialize,\r\n  checkInputField,\r\n  validateEmail,\r\n  validatePassword,\r\n  validateUsername,\r\n  isMatch,\r\n};\r\n"]},"metadata":{},"sourceType":"module"}