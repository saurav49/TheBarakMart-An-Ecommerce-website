{"ast":null,"code":"import React from \"react\";\n\nvar findUserByUsername = function findUserByUsername(userName, users) {\n  return users.find(function (user) {\n    return user.username === userName;\n  });\n};\n\nexport var FakeAuthApi = function FakeAuthApi(userName, password, users) {\n  return new Promise(function (resolve, reject) {\n    setTimeout(function () {\n      var user = findUserByUsername(userName, users);\n\n      if (user !== undefined) {\n        user.password === password ? resolve({\n          success: true,\n          status: 200\n        }) : reject({\n          success: false,\n          status: 404\n        });\n      }\n\n      reject({\n        success: false,\n        status: 404\n      });\n    }, 3000);\n  });\n};","map":{"version":3,"sources":["C:/Users/HP/Documents/GitHub/TheBarakMart-An-Ecommerce-website/src/api/fakeAuthApi.js"],"names":["React","findUserByUsername","userName","users","find","user","username","FakeAuthApi","password","Promise","resolve","reject","setTimeout","undefined","success","status"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD,EAAWC,KAAX,EAAqB;AAC9C,SAAOA,KAAK,CAACC,IAAN,CAAW,UAACC,IAAD;AAAA,WAAUA,IAAI,CAACC,QAAL,KAAkBJ,QAA5B;AAAA,GAAX,CAAP;AACD,CAFD;;AAIA,OAAO,IAAMK,WAAW,GAAG,SAAdA,WAAc,CAACL,QAAD,EAAWM,QAAX,EAAqBL,KAArB,EAA+B;AACxD,SAAO,IAAIM,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCC,IAAAA,UAAU,CAAC,YAAM;AACf,UAAMP,IAAI,GAAGJ,kBAAkB,CAACC,QAAD,EAAWC,KAAX,CAA/B;;AACA,UAAIE,IAAI,KAAKQ,SAAb,EAAwB;AACtBR,QAAAA,IAAI,CAACG,QAAL,KAAkBA,QAAlB,GACIE,OAAO,CAAC;AAAEI,UAAAA,OAAO,EAAE,IAAX;AAAiBC,UAAAA,MAAM,EAAE;AAAzB,SAAD,CADX,GAEIJ,MAAM,CAAC;AAAEG,UAAAA,OAAO,EAAE,KAAX;AAAkBC,UAAAA,MAAM,EAAE;AAA1B,SAAD,CAFV;AAGD;;AACDJ,MAAAA,MAAM,CAAC;AAAEG,QAAAA,OAAO,EAAE,KAAX;AAAkBC,QAAAA,MAAM,EAAE;AAA1B,OAAD,CAAN;AACD,KARS,EAQP,IARO,CAAV;AASD,GAVM,CAAP;AAWD,CAZM","sourcesContent":["import React from \"react\";\r\n\r\nconst findUserByUsername = (userName, users) => {\r\n  return users.find((user) => user.username === userName);\r\n};\r\n\r\nexport const FakeAuthApi = (userName, password, users) => {\r\n  return new Promise((resolve, reject) => {\r\n    setTimeout(() => {\r\n      const user = findUserByUsername(userName, users);\r\n      if (user !== undefined) {\r\n        user.password === password\r\n          ? resolve({ success: true, status: 200 })\r\n          : reject({ success: false, status: 404 });\r\n      }\r\n      reject({ success: false, status: 404 });\r\n    }, 3000);\r\n  });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}